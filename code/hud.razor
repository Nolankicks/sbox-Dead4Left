@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Kicks

<root>
	<div class="title">@mp5.ammo / @mp5.fullAmmo</div>
	<div class="health"></div>
	
	<div class="center">
		<div class="crosshair"></div>
	</div>
	<div class="left">
		<div class="score">
			<div class="score">
				<h1>Score:</h1>
				<p>@($"{manager.Score:n0}")</p>
			</div>
			<div class="highscore">
				<h1>Highscore:</h1>
				<p>@($"{manager.HighScore:n0}")</p>
			</div>
		</div>
		<div class="leaderboard">
			@if(manager.Leaderboard is not null)
			{
				<h1>LEADERBOARD</h1>
				<div class="entries">
					@foreach(var entry in manager.Leaderboard.Entries)
					{
						<div class="entry @IsMe(entry)">
							<div class="rank">@entry.Rank</div>
							<div class="name">
								<image texture=@AvatarTexture(entry)/>
								<label>@entry.DisplayName</label>
							</div>
							<div class="value">@entry.FormattedValue</div>
						</div>
					}
				</div>
			}
		</div>
	</div>

</root>

@code
{
	[Property] public MP5 mp5 { get; set; }
	[Property, TextArea] public string MyStringValue { get; set; } = "Hello World!";
	[Property] public Manager manager { get; set; }
	//[Property] public PlayerController player { get; set; }
	
	
	string IsMe(Sandbox.Services.Leaderboards.Entry entry)
    {
        return entry.Me ? "me" : "";
    }


	string AvatarTexture(Sandbox.Services.Leaderboards.Entry entry)
    {
        return $"avatar:{entry.SteamId}";
    }
 
	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine( MyStringValue, mp5.ammo, mp5.fullAmmo, manager.Score, manager.HighScore);
}
